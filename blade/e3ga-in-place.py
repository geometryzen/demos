# Demonstration of the Geometric Algebra generated by a Euclidean 3D vector space.
from e3ga import *

def explain(m):
    print str(m) + " is " + repr(m)
    return m

def showValue(name, m):
    print name + " => " + str(m)
    return m

zero  = explain(Euclidean3(0, 0, 0, 0, 0, 0, 0, 0))
one   = explain(ScalarE3(1))
two   = explain(ScalarE3(2))
three = explain(3)
i     = explain(VectorE3(1, 0, 0))
j     = explain(VectorE3(0, 1, 0))
k     = explain(VectorE3(0, 0, 1))
ij    = explain(BivectorE3(1, 0, 0))
jk    = explain(BivectorE3(0, 1, 0))
ki    = explain(BivectorE3(0, 0, 1))
I     = explain(PseudoscalarE3(1))

x = zero.clone()
showValue("x", x)

x += one
showValue("x", x)
x += 1
showValue("x", x)

x -= one
showValue("x", x)
x -= 1
showValue("x", x)

x = one.clone()
showValue("x", x)
x *= two
showValue("x", x)
x *= 2
showValue("x", x)

x = i.clone()
showValue("x", x)
x ^= j
showValue("x", x)
x ^= 2
showValue("x", x)

x = i.clone()
showValue("x", x)
x <<= I
showValue("x", x)

x = I.clone()
showValue("x", x)
x >>= k
showValue("x", x)
